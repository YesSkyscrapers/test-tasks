{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","tab","setTab","useEffect","document","title","onTabSelect","tabId","className","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"gMAAe,I,YCiEAA,MA7Df,WAEE,MAAoBC,mBAAS,GAA7B,mBAAKC,EAAL,KAAUC,EAAV,KAEAC,qBAAU,WACRC,SAASC,MAAQ,gGAChB,IAEH,IAAMC,EAAc,SAAAC,GAClBL,EAAOK,IAGT,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,0BAAf,UACE,qBAAKC,QAAS,kBAAMH,EAAY,IAAIE,UAAgB,GAALP,EAAS,aAAe,MAAvE,sBACA,qBAAKQ,QAAS,kBAAMH,EAAY,IAAIE,UAAgB,GAALP,EAAS,aAAe,MAAvE,wBAEF,sBAAKO,UAAU,iBAAf,UACE,qBAAKA,UAAU,aAAf,uDACA,sBAAKA,UAAU,YAAf,UACE,gCACE,mXAAyE,uBACzE,+VAA8E,uBAC9E,uVAA2E,0BAE7E,uBACA,gCACE,0GAA6B,uBAC7B,sBAAMA,UAAU,gBAAhB,sJAAiE,uBACjE,sBAAMA,UAAU,gBAAhB,2OAAgF,uBAChF,sBAAMA,UAAU,gBAAhB,sOAAgF,0BAElF,uBACA,gCACE,0GAA4B,uBAC5B,sBAAMA,UAAU,gBAAhB,oPAAoF,uBACpF,sBAAMA,UAAU,gBAAhB,sZAAoH,uBACpH,sBAAMA,UAAU,gBAAhB,mbAAwH,0BAE1H,uBACA,gCACE,0GAA4B,uBAC5B,sBAAMA,UAAU,gBAAhB,oPAAoF,uBACpF,sBAAMA,UAAU,gBAAhB,iSAA8F,uBAC9F,sBAAMA,UAAU,gBAAhB,iUAAgG,0BAElG,uBACA,gCACE,0GAA4B,uBAC5B,sBAAMA,UAAU,gBAAhB,oPAAoF,uBACpF,sBAAMA,UAAU,gBAAhB,mKAAyE,sCC5CxEE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjB,SAASkB,eAAe,SAM1BZ,K","file":"static/js/main.7e500204.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n\n  let [tab, setTab] = useState(0)\n\n  useEffect(() => {\n    document.title = \"Тестовые задания\"\n  }, [])\n\n  const onTabSelect = tabId => {\n    setTab(tabId)\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <div className=\"Tabs-container noselect\"> \n          <div onClick={() => onTabSelect(0)} className={tab==0 ? \"Active-tab\" : \"Tab\"}>Frontend</div>\n          <div onClick={() => onTabSelect(1)} className={tab==1 ? \"Active-tab\" : \"Tab\"}>Backend</div>\n        </div>\n        <div className=\"Task-container\">\n          <div className=\"Task-title\">Список Todo</div>\n          <div className=\"Task-text\">\n            <div>\n              <span>Создать компонент соответствующий нижеуказанным требованиям.</span><br/>\n              <span>Наличие файлика readme с инструкциями по запуску является плюсом.</span><br/>\n              <span>Также отсутствие Expo в проекте является очень большим плюсом.</span><br/>\n            </div>\n            <br/>\n            <div>\n              <span >1-ая сложность:</span><br/>\n              <span className=\"Task-subtitle\">• Добавление новой записи;</span><br/>\n              <span className=\"Task-subtitle\">• Отображение списка добавленных записей;</span><br/>\n              <span className=\"Task-subtitle\">• Удаление из списка добавленных записей;</span><br/>\n            </div>\n            <br/>\n            <div>\n              <span>2-ая сложность:</span><br/>\n              <span className=\"Task-subtitle\">• (Все пункты с предыдущего уровня сложности)</span><br/>\n              <span className=\"Task-subtitle\">• Новая запись добавляется при условии, что длина записи меньше некоторого N.</span><br/>\n              <span className=\"Task-subtitle\">• Переключение статуса записи Выполнено / Невыполненный при клике на её название;</span><br/>\n            </div>\n            <br/>\n            <div>\n              <span>3-ая сложность:</span><br/>\n              <span className=\"Task-subtitle\">• (Все пункты с предыдущего уровня сложности)</span><br/>\n              <span className=\"Task-subtitle\">• Фильтрация по типу (все, выполненные, невыполненные);</span><br/>\n              <span className=\"Task-subtitle\">• Отображение счётчика выполненных и невыполненных задач;</span><br/>\n            </div>\n            <br/>\n            <div>\n              <span>4-ая сложность:</span><br/>\n              <span className=\"Task-subtitle\">• (Все пункты с предыдущего уровня сложности)</span><br/>\n              <span className=\"Task-subtitle\">• Использование хранилища (Redux);</span><br/>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}